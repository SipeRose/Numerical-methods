%  Численное моделирование поведения физических характеристик модели
%  трехцепочечной модели Изинга (в том числе и во внешнем поле)

nstep1 = 100;
nstep2 = 100;

Tmax = 5;
Hmax = 0.1;


T0 = 0.1;
deltaT1 = (Tmax-T0) / nstep1;

Hmin = -0.1;
deltaH = (Hmax-Hmin) / nstep2;
    

for k1 = 0: nstep1 
	T = T0 + k1 * deltaT1;
	for  k2 = 0: nstep2
        h = Hmin + (k2 - 1) * deltaH;
        
            R01 = 0.9 / T;    
			R03 = 1 / T;
			R04 = 0.5 / T;     
			R05 = R04;        
			R012 = 0;
			R013 = 0;
			R014 = 0;
			R015 = 0;
			R035 = 0;
			R034 = 0;
			R045 = 0;
            R0123 = 0;
            R0134 = 0;
            R0135 = 0;
            R0145 = R0135;
            R0345 = R0123;
            R01234 = 0;
            R01345 = 0;
            R012345 = 0;
            H = h / (T);           
            
            Hamiltonian_min = hamiltonian1(1, 1, 1, 1, 1, 1, R01, R03, R04, R05, ...
    R012, R013, R014, R015, R035, R034, R045, R0123, R0134, R0135, R0145, R0345, R01234, R01345, R012345, H);
            for i0 = 0: 1
                 x0 = 1 - 2 * i0;
                 for i1 = 0: 1
                      x1 = 1 - 2 * i1;
                      for i2 = 0: 1
                           x2 = 1 - 2 * i2;
                           for i3 = 0: 1
                                x3 = 1 - 2 * i3;
                                for i4 = 0: 1
                                    x4 = 1 - 2 * i4;
                                    for i5 = 0: 1
							            x5 = 1 - 2 * i5;

                                        if (Hamiltonian_min < hamiltonian1(x0, x1, x2, x3, x4, x5, R01, R03, R04, R05, ...
    R012, R013, R014, R015, R035, R034, R045, R0123, R0134, R0135, R0145, R0345, R01234, R01345, R012345, H))
                                            Hamiltonian_min = hamiltonian1(x0, x1, x2, x3, x4, x5, R01, R03, R04, R05, ...
    R012, R013, R014, R015, R035, R034, R045, R0123, R0134, R0135, R0145, R0345, R01234, R01345, R012345, H);
                                        end
                                    end
                                end
                           end
                      end
                 end
            end
            
            echo off

            B = zeros(2^3, 2^3);

            for i0 = 0: 1
                 x0 = 1 - 2 * i0;
                 for i1 = 0: 1
                      x1 = 1 - 2 * i1;
                      for i2 = 0: 1
                           x2 = 1 - 2 * i2;
                           for i3 = 0: 1
                                x3 = 1 - 2 * i3;
                                for i4 = 0: 1
                                    x4 = 1 - 2 * i4;
                                    for i5 = 0: 1
							            x5 = 1 - 2 * i5;

                                        k = 1 + (1 - x0)/2 + (1 - x1) + 2*(1 - x2);
                                        l = 1 + (1 - x3)/2 + (1 - x4) + 2*(1 - x5);

                                        B(k,l)= exp(hamiltonian1(x0, x1, x2, x3, x4, x5, R01, R03, R04, R05, ...
    R012, R013, R014, R015, R035, R034, R045, R0123, R0134, R0135, R0145, R0345, R01234, R01345, R012345, H) - Hamiltonian_min);

                                    end
                                end
                           end
                      end
                 end
            end
            
            tao1 = [B(1,1) B(1,2)+B(1,3)+B(1,5) B(1,4)+B(1,6)+B(1,7) B(1,8);
                    B(2,1) B(2,2)+B(2,3)+B(2,5) B(2,4)+B(2,6)+B(2,7) B(2,8);
                    B(4,1) B(4,2)+B(4,3)+B(4,5) B(4,4)+B(4,6)+B(4,7) B(4,8);
                    B(8,1) B(8,2)+B(8,3)+B(8,5) B(8,4)+B(8,6)+B(8,7) B(8,8)];

            A = -tao1(1,1)-tao1(2,2)-tao1(3,3)-tao1(4,4);

            BB = tao1(1,1)*tao1(2,2)+...
                tao1(1,1)*tao1(3,3)+...
                tao1(1,1)*tao1(4,4)+...
                tao1(2,2)*tao1(3,3)+...
                tao1(2,2)*tao1(4,4)+...
                tao1(3,3)*tao1(4,4)-...
                tao1(2,4)*tao1(4,2)-...
                tao1(3,4)*tao1(4,3)-...
                tao1(2,3)*tao1(3,2)-...
                tao1(1,2)*tao1(2,1)-...
                tao1(1,3)*tao1(3,1)-...
                tao1(1,4)*tao1(4,1);

            C1 = -tao1(1,1)*tao1(2,2)*tao1(3,3)-...
                 tao1(1,1)*tao1(2,2)*tao1(4,4)-...
                 tao1(1,1)*tao1(3,3)*tao1(4,4)+...
                 tao1(1,1)*tao1(2,4)*tao1(4,2)+...
                 tao1(1,1)*tao1(3,4)*tao1(4,3)+...
                 tao1(1,1)*tao1(2,3)*tao1(3,2)-...
                 tao1(2,2)*tao1(3,3)*tao1(4,4)-...
                 tao1(2,4)*tao1(4,3)*tao1(3,2)-...
                 tao1(2,3)*tao1(3,4)*tao1(4,2)+...
                 tao1(2,4)*tao1(4,2)*tao1(3,3)+...
                 tao1(4,3)*tao1(3,4)*tao1(2,2)+...
                 tao1(3,2)*tao1(2,3)*tao1(4,4)+...
                 tao1(1,2)*tao1(2,1)*tao1(3,3)+...
                 tao1(1,2)*tao1(2,1)*tao1(4,4)-...
                 tao1(1,2)*tao1(2,4)*tao1(4,1)-...
                 tao1(1,2)*tao1(2,3)*tao1(3,1)-...
                 tao1(1,3)*tao1(3,2)*tao1(2,1)-...
                 tao1(1,3)*tao1(3,4)*tao1(4,1)+...
                 tao1(1,3)*tao1(3,1)*tao1(2,2)+...
                 tao1(1,3)*tao1(3,1)*tao1(4,4)+...
                 tao1(1,4)*tao1(4,1)*tao1(2,2)+...
                 tao1(1,4)*tao1(4,1)*tao1(3,3)-...
                 tao1(1,4)*tao1(2,1)*tao1(4,2)-...
                 tao1(1,4)*tao1(4,3)*tao1(3,1);

            D = tao1(1,1)*tao1(2,2)*tao1(3,3)*tao1(4,4)+...
                tao1(1,1)*tao1(2,4)*tao1(4,3)*tao1(3,2)+...
                tao1(1,1)*tao1(2,3)*tao1(3,4)*tao1(4,2)-...
                tao1(1,1)*tao1(2,4)*tao1(4,2)*tao1(3,3)-...
                tao1(1,1)*tao1(4,3)*tao1(3,4)*tao1(2,2)-...
                tao1(1,1)*tao1(3,2)*tao1(2,3)*tao1(4,4)-...
                tao1(1,2)*tao1(2,1)*tao1(3,3)*tao1(4,4)-...
                tao1(1,2)*tao1(2,4)*tao1(4,3)*tao1(3,1)-...
                tao1(1,2)*tao1(2,3)*tao1(3,4)*tao1(4,1)+...
                tao1(1,2)*tao1(2,4)*tao1(4,1)*tao1(3,3)+...
                tao1(1,2)*tao1(2,1)*tao1(3,4)*tao1(4,3)+...
                tao1(1,2)*tao1(3,1)*tao1(2,3)*tao1(4,4)+...
                tao1(1,3)*tao1(2,1)*tao1(3,2)*tao1(4,4)+...
                tao1(1,3)*tao1(3,1)*tao1(4,2)*tao1(2,4)+...
                tao1(1,3)*tao1(3,4)*tao1(4,1)*tao1(2,2)-...
                tao1(1,3)*tao1(2,4)*tao1(3,2)*tao1(4,1)-...
                tao1(1,3)*tao1(3,4)*tao1(4,2)*tao1(2,1)-...
                tao1(1,3)*tao1(3,1)*tao1(2,2)*tao1(4,4)-...
                tao1(1,4)*tao1(2,1)*tao1(3,2)*tao1(4,3)-...
                tao1(1,4)*tao1(3,1)*tao1(4,2)*tao1(2,3)-...
                tao1(1,4)*tao1(4,1)*tao1(2,2)*tao1(3,3)+...
                tao1(1,4)*tao1(2,3)*tao1(3,2)*tao1(4,1)+...
                tao1(1,4)*tao1(2,1)*tao1(4,2)*tao1(3,3)+...
                tao1(1,4)*tao1(3,1)*tao1(4,3)*tao1(2,2);
            


            Ah = -3*tao1(1,1) - tao1(2,2) + tao1(3,3) + 3*tao1(4,4);

            BBh = 4*tao1(1,1)*tao1(2,2)+...
                2*tao1(1,1)*tao1(3,3)+...
                0*tao1(1,1)*tao1(4,4)+...
                0*tao1(2,2)*tao1(3,3)-...
                2*tao1(2,2)*tao1(4,4)-...
                4*tao1(3,3)*tao1(4,4)+...
                2*tao1(2,4)*tao1(4,2)+...
                4*tao1(3,4)*tao1(4,3)-...
                0*tao1(2,3)*tao1(3,2)-...
                4*tao1(1,2)*tao1(2,1)-...
                2*tao1(1,3)*tao1(3,1)-...
                0*tao1(1,4)*tao1(4,1);

            C1h = -3*tao1(1,1)*tao1(2,2)*tao1(3,3)-...
                 tao1(1,1)*tao1(2,2)*tao1(4,4)+...
                 tao1(1,1)*tao1(3,3)*tao1(4,4)+...
                 tao1(1,1)*tao1(2,4)*tao1(4,2)-...
                 tao1(1,1)*tao1(3,4)*tao1(4,3)+...
                 3*tao1(1,1)*tao1(2,3)*tao1(3,2)+...
                 3*tao1(2,2)*tao1(3,3)*tao1(4,4)+...
                 3*tao1(2,4)*tao1(4,3)*tao1(3,2)+...
                 3*tao1(2,3)*tao1(3,4)*tao1(4,2)-...
                 3*tao1(2,4)*tao1(4,2)*tao1(3,3)-...
                 3*tao1(4,3)*tao1(3,4)*tao1(2,2)-...
                 3*tao1(3,2)*tao1(2,3)*tao1(4,4)+...
                 3*tao1(1,2)*tao1(2,1)*tao1(3,3)+...
                 tao1(1,2)*tao1(2,1)*tao1(4,4)-...
                 tao1(1,2)*tao1(2,4)*tao1(4,1)-...
                 3*tao1(1,2)*tao1(2,3)*tao1(3,1)-...
                 3*tao1(1,3)*tao1(3,2)*tao1(2,1)+...
                 tao1(1,3)*tao1(3,4)*tao1(4,1)+...
                 3*tao1(1,3)*tao1(3,1)*tao1(2,2)-...
                 tao1(1,3)*tao1(3,1)*tao1(4,4)+...
                 tao1(1,4)*tao1(4,1)*tao1(2,2)-...
                 tao1(1,4)*tao1(4,1)*tao1(3,3)-...
                 tao1(1,4)*tao1(2,1)*tao1(4,2)+...
                 tao1(1,4)*tao1(4,3)*tao1(3,1);


            Ahh = -9*tao1(1,1)-1*tao1(2,2)-1*tao1(3,3)-9*tao1(4,4);

            BBhh = 16*tao1(1,1)*tao1(2,2)+...
                4*tao1(1,1)*tao1(3,3)+...
                0*tao1(1,1)*tao1(4,4)+...
                0*tao1(2,2)*tao1(3,3)+...
                4*tao1(2,2)*tao1(4,4)+...
                16*tao1(3,3)*tao1(4,4)-...
                4*tao1(2,4)*tao1(4,2)-...
                16*tao1(3,4)*tao1(4,3)-...
                0*tao1(2,3)*tao1(3,2)-...
                16*tao1(1,2)*tao1(2,1)-...
                4*tao1(1,3)*tao1(3,1)-...
                0*tao1(1,4)*tao1(4,1);

            C1hh=-9*tao1(1,1)*tao1(2,2)*tao1(3,3)-...
                 1*tao1(1,1)*tao1(2,2)*tao1(4,4)-...
                 1*tao1(1,1)*tao1(3,3)*tao1(4,4)+...
                 1*tao1(1,1)*tao1(2,4)*tao1(4,2)+...
                 1*tao1(1,1)*tao1(3,4)*tao1(4,3)+...
                 9*tao1(1,1)*tao1(2,3)*tao1(3,2)-...
                 9*tao1(2,2)*tao1(3,3)*tao1(4,4)-...
                 9*tao1(2,4)*tao1(4,3)*tao1(3,2)-...
                 9*tao1(2,3)*tao1(3,4)*tao1(4,2)+...
                 9*tao1(2,4)*tao1(4,2)*tao1(3,3)+...
                 9*tao1(4,3)*tao1(3,4)*tao1(2,2)+...
                 9*tao1(3,2)*tao1(2,3)*tao1(4,4)+...
                 9*tao1(1,2)*tao1(2,1)*tao1(3,3)+...
                 1*tao1(1,2)*tao1(2,1)*tao1(4,4)-...
                 1*tao1(1,2)*tao1(2,4)*tao1(4,1)-...
                 9*tao1(1,2)*tao1(2,3)*tao1(3,1)-...
                 9*tao1(1,3)*tao1(3,2)*tao1(2,1)-...
                 1*tao1(1,3)*tao1(3,4)*tao1(4,1)+...
                 9*tao1(1,3)*tao1(3,1)*tao1(2,2)+...
                 tao1(1,3)*tao1(3,1)*tao1(4,4)+...
                 tao1(1,4)*tao1(4,1)*tao1(2,2)+...
                 tao1(1,4)*tao1(4,1)*tao1(3,3)-...
                 tao1(1,4)*tao1(2,1)*tao1(4,2)-...
                 tao1(1,4)*tao1(4,3)*tao1(3,1);
             

            echo off  

            lam = eig(B);
            Lambda_max = lam(1);

            for j = 1:8
                if (Lambda_max < abs(lam(j)))
                    Lambda_max = abs(lam(j));
                end
            end
            
            y(1+k1,1+k2) = (Hamiltonian_min + log(Lambda_max))/3;

            KbT = 1 / (T);

            dLambda = -1*KbT * (Ah*Lambda_max^3 + BBh*Lambda_max^2 + ...
                C1h*Lambda_max)/(4*Lambda_max^3 + 3*A*Lambda_max^2 + ...
                2*BB*Lambda_max + C1);

            m(1+k1,1+k2) = 1/(KbT * 3) * dLambda/Lambda_max;
            
            m1(1+k1,1+k2) = m(1+k1,1+k2);

            d2Lambda = -1*(12*Lambda_max^2*dLambda^2 + ...
                KbT^2*Ahh*Lambda_max^3 + 6*KbT*Ah*(Lambda_max^2)*dLambda + ...
                6*A*Lambda_max*(dLambda^2) + KbT^2*BBhh*Lambda_max^2 + ...
                4*KbT*BBh*Lambda_max*dLambda + 2*BB*(dLambda^2) + ...
                KbT^2*C1hh*Lambda_max + 2*KbT*C1h*dLambda)/(4*Lambda_max^3 + ...
                3*A*Lambda_max^2 + 2*BB*Lambda_max + C1);
            
            hi(1+k1,1+k2) = 1/(3 * KbT) * (d2Lambda/Lambda_max - ...
                (dLambda/Lambda_max)^2);

    end
end

% Построение графиков с применением численных методов

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

M1 = zeros(nstep1+1, nstep2+1);
for k1 = 0: (nstep1 )   
    T = T0 + k1 * deltaT1;
	for  k2 = 0: (nstep2)   
        M1(1+k1,1+k2) = m(1+k1,1+k2);
    end
end

disp('M=')
disp(M1)
figure(3)
[R, TT] = meshgrid (Hmin:deltaH:Hmax,T0:deltaT1:Tmax)
mesh (R, TT, M1)
surf (R, TT, M1)
colorbar
colormap (jet)
title ('Намагниченность m (аналитическое)')
xlabel ('H')
ylabel ('T')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

M = zeros(nstep1+1, nstep2+1);
for k1 = 0: (nstep1 )   
    T = T0 + k1 * deltaT1;
	for  k2 = 0: (nstep2 - 2)   
        M(1+k1,1+k2) = (T) * (y(1+k1, 1+k2 + 2) - y(1+k1, 1+k2 + 0)) / (2*deltaH);
    end
end
disp('M=')
disp(M)
figure(4)
[R, TT] = meshgrid (Hmin:deltaH:Hmax,T0:deltaT1:Tmax)
mesh (R, TT, M)
surf (R, TT, M)
colorbar
colormap (jet)
title ('Намагниченность m (численная)')
xlabel ('H')
ylabel ('T')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Hi2 = zeros(nstep1+1, nstep2+1);

for k1 = 0: (nstep1 )   		
    T = T0 + k1 * deltaT1;
	for  k2 = 0: (nstep2)
        Hi2(1+k1,1+k2) = hi(1+k1,1+k2);
    end
end

disp('Hi=')
disp(Hi2) 
figure(6)
[R, TT] = meshgrid (Hmin:deltaH:Hmax,T0:deltaT1:Tmax)
mesh (R, TT, Hi2)
surf (R, TT, Hi2)
colorbar
colormap (jet)
title ('Восприимчивочть Hi (аналитическая - через коэффициенты характеристическго уравнения)')
xlabel ('H')
ylabel ('T')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Hi = zeros(nstep1+1, nstep2+1);
for k1 = 0: (nstep1 )   		
    T = T0 + k1 * deltaT1;
	for  k2 = 0: (nstep2 - 2)
        Hi(1+k1,1+k2) = (T) * (y(1+k1 ,1+k2 + 2) - 2*y(1+k1 ,1+k2 + 1) + y(1+k1 ,1+k2 + 0)) / (deltaH*deltaH);  
    end
end
disp('Hi=')
disp(Hi)
figure(8)
[R, TT] = meshgrid (Hmin:deltaH:Hmax,T0:deltaT1:Tmax)
mesh (R, TT, Hi)
surf (R, TT, Hi)
colorbar
colormap (jet)
title ('Восприимчивочть Hi (численная)')
xlabel ('H')
ylabel ('T')
